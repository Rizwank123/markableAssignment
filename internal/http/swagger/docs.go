// Package swagger Code generated by swaggo/swag. DO NOT EDIT
package swagger

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "https://example.com/terms",
        "contact": {
            "name": "Mohammad Developer",
            "url": "https://rizwank123.github.io",
            "email": "md.rizwank431@gmail.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/patients": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Retrieve a list of all patients",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Patient"
                ],
                "summary": "Find all patients",
                "operationId": "findAllPatients",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer ",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/Patient"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/UnauthorizedError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ForbiddenAccessError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/SystemError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Creates a patient with the provided input",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Patient"
                ],
                "summary": "Create a new patient",
                "operationId": "createPatient",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer ",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Patient data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreatePatientInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/Patient"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/InvalidRequestError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/UnauthorizedError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ForbiddenAccessError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/SystemError"
                        }
                    }
                }
            }
        },
        "/patients/{id}": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Find a patient based on the provided ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Patient"
                ],
                "summary": "Find a patient by ID",
                "operationId": "findPatientByID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer ",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Patient ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/Patient"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/InvalidRequestError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/UnauthorizedError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ForbiddenAccessError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/SystemError"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Updates the patient based on the provided ID and input data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Patient"
                ],
                "summary": "Update a patient by ID",
                "operationId": "updatePatient",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer ",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Patient ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated patient data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdatePatientInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/Patient"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/InvalidRequestError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/UnauthorizedError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ForbiddenAccessError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/NotFoundError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/SystemError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Deletes a patient based on the provided ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Patient"
                ],
                "summary": "Delete a patient by ID",
                "operationId": "deletePatient",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer ",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Patient ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/BaseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/InvalidRequestError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/UnauthorizedError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ForbiddenAccessError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/NotFoundError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/SystemError"
                        }
                    }
                }
            }
        },
        "/users": {
            "post": {
                "description": "Create a new user with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "User registration details",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateUserInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/User"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/InvalidRequestError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/UnauthorizedError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ForbiddenAccessError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/SystemError"
                        }
                    }
                }
            }
        },
        "/users/login": {
            "post": {
                "description": "Authenticate a user using provided credentials",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "User login",
                "operationId": "userLogin",
                "parameters": [
                    {
                        "description": "Login input",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LoginInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/LoginOutput"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/InvalidRequestError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/UnauthorizedError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/SystemError"
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Find a user based on the provided ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Find a user by ID",
                "operationId": "findUserByID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer ",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/User"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/InvalidRequestError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/UnauthorizedError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ForbiddenAccessError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/SystemError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Address": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string",
                    "example": "Ahmedabad"
                },
                "country": {
                    "type": "string",
                    "example": "India"
                },
                "location": {
                    "type": "string",
                    "example": "Ahmedabad"
                },
                "pincode": {
                    "type": "string",
                    "example": "380009"
                },
                "state": {
                    "type": "string",
                    "example": "Gujarat"
                },
                "street": {
                    "type": "string",
                    "example": "Near Railway Station"
                }
            }
        },
        "BaseResponse": {
            "type": "object",
            "properties": {
                "data": {}
            }
        },
        "CreatePatientInput": {
            "type": "object",
            "properties": {
                "address": {
                    "$ref": "#/definitions/Address"
                },
                "age": {
                    "type": "integer",
                    "example": 26
                },
                "disease": {
                    "type": "string",
                    "example": "Diabetes"
                },
                "email": {
                    "type": "string",
                    "example": "raj.singhaniya@gmail.com"
                },
                "first_name": {
                    "type": "string",
                    "example": "Raj"
                },
                "last_name": {
                    "type": "string",
                    "example": "Singhaniya"
                },
                "phone": {
                    "type": "string",
                    "example": "+91 9876543210"
                }
            }
        },
        "CreateUserInput": {
            "type": "object",
            "properties": {
                "full_name": {
                    "type": "string",
                    "example": "John Doe"
                },
                "password": {
                    "type": "string",
                    "example": "password123"
                },
                "role": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_markable_internal_domain.UserRole"
                        }
                    ],
                    "example": "RECEPTIONIST"
                },
                "user_name": {
                    "type": "string",
                    "example": "+919876543210"
                }
            }
        },
        "ForbiddenAccessError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "FORBIDDEN_ACCESS"
                },
                "message": {
                    "type": "string",
                    "example": "You are forbidden from accessing this resource"
                }
            }
        },
        "InvalidRequestError": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "invalid request"
                }
            }
        },
        "LoginInput": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string",
                    "example": "+919876543210"
                }
            }
        },
        "LoginOutput": {
            "type": "object",
            "properties": {
                "expires_in": {
                    "type": "integer"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "NotFoundError": {
            "type": "object"
        },
        "Patient": {
            "type": "object",
            "properties": {
                "address": {
                    "$ref": "#/definitions/Address"
                },
                "age": {
                    "type": "integer",
                    "example": 26
                },
                "created_at": {
                    "type": "string"
                },
                "disease": {
                    "type": "string",
                    "example": "Diabetes"
                },
                "email": {
                    "type": "string",
                    "example": "raj.singhaniya@gmail.com"
                },
                "first_name": {
                    "type": "string",
                    "example": "Raj"
                },
                "id": {
                    "type": "string",
                    "example": ""
                },
                "last_name": {
                    "type": "string",
                    "example": "Singhaniya"
                },
                "phone": {
                    "type": "string",
                    "example": "+91 9876543210"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "SystemError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "INTERNAL_SERVER_ERROR"
                },
                "message": {
                    "type": "string",
                    "example": "Oops! Something went wrong. Please try again later"
                }
            }
        },
        "UnauthorizedError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "UNAUTHORIZED"
                },
                "message": {
                    "type": "string",
                    "example": "You are not authorized to access this resource"
                }
            }
        },
        "UpdatePatientInput": {
            "type": "object",
            "properties": {
                "address": {
                    "$ref": "#/definitions/Address"
                },
                "age": {
                    "type": "integer",
                    "example": 26
                },
                "disease": {
                    "type": "string",
                    "example": "Diabetes"
                },
                "email": {
                    "type": "string",
                    "example": "raj.singhaniya@gmail.com"
                },
                "first_name": {
                    "type": "string",
                    "example": "Raj"
                },
                "last_name": {
                    "type": "string",
                    "example": "Singhaniya"
                },
                "phone": {
                    "type": "string",
                    "example": "+91 9876543210"
                }
            }
        },
        "User": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string",
                    "example": "John Doe"
                },
                "id": {
                    "type": "string",
                    "example": ""
                },
                "role": {
                    "type": "string",
                    "example": "RECEPTIONIST"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_name": {
                    "type": "string",
                    "example": "+919876543210"
                }
            }
        },
        "github_com_markable_internal_domain.UserRole": {
            "type": "string",
            "enum": [
                "DOCTOR",
                "RECEPTIONIST",
                "NURSE"
            ],
            "x-enum-varnames": [
                "UserRoleDoctor",
                "UserRoleRECEPTIONIST",
                "UserRoleNURSE"
            ]
        }
    },
    "securityDefinitions": {
        "JWT": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:7700",
	BasePath:         "/api/v1",
	Schemes:          []string{"http", "https"},
	Title:            "Markable API",
	Description:      "Markable application's set of APIs",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
